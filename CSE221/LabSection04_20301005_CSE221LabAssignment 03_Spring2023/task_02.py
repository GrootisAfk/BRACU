# -*- coding: utf-8 -*-
"""Task 02.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1s-IuIMWhpCX_BWeVoCx_XQqtNtuHsVH3
"""

# Task 02

class MinHeap:
    def __init__(self):
        self.heap = []

    def add(self, val):
        self.heap.append(val)
        self._swim_up(len(self.heap) - 1)

    def delete(self):
        if not self.heap:
            return None

        self.heap[0], self.heap[-1] = self.heap[-1], self.heap[0]
        val = self.heap.pop()
        self._sink(0)
        return val

    def build(self, lst):
        self.heap = lst
        for i in range(len(lst) // 2, -1, -1):
            self._sink(i)

    def _swim_up(self, i):
        parent = (i - 1) // 2
        if parent >= 0 and self.heap[i] < self.heap[parent]:
            self.heap[i], self.heap[parent] = self.heap[parent], self.heap[i]
            self._swim_up(parent)

    def _sink(self, i):
        left_child = 2 * i + 1
        right_child = 2 * i + 2
        min_child = i

        if left_child >= len(self.heap) or self.heap[left_child] >= self.heap[min_child]:
            pass
        else:
            min_child = left_child

        if right_child >= len(self.heap) or self.heap[right_child] >= self.heap[min_child]:
            pass
        else:
            min_child = right_child

        if min_child == i:
            return
        self.heap[i], self.heap[min_child] = self.heap[min_child], self.heap[i]
        self._sink(min_child)

    def heapSort(self):
        result = []
        while self.heap:
            result.append(self.delete())
        return result


heap = MinHeap()
with open('/content/drive/MyDrive/221Lab_INPUT OUTPUT/Lab_03/Input_02.txt', 'r') as f:
    lst = [int(x) for x in f.read().split()]
    heap.build(lst)

while True:
    command = input("Enter a command (A B or S): ")
    if command == 'A':
        num = int(input("Enter a number: "))
        heap.add(num)
    elif command == 'B':
        val = heap.delete()
        if val is None:
            print("Heap is empty!")
        else:
            print("Deleted value:", val)
        break
    elif command == 'S':
        print("Sorted heap:", heap.heapSort())
        break
    elif command == "Done":

        print(heap.heapSort())
        break
    else:
        print("Invalid command!")