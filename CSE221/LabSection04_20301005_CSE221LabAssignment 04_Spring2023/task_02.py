# -*- coding: utf-8 -*-
"""Task_02.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1d9GP5_CRSpWS71WHRvJL5QD2VpmyQWgK
"""

#task_02

def merge_sort(arr):
    if len(arr) <= 1:
        return arr, 0

    mid = len(arr) // 2
    left, inv_left = merge_sort(arr[:mid])
    right, inv_right = merge_sort(arr[mid:])
    merged, inv_merge = merge(left, right)

    return merged, inv_left + inv_right + inv_merge


def merge(left, right):
    merged = []
    inv = 0
    i = j = 0

    while i < len(left) and j < len(right):
        if left[i] > right[j]:
            merged.append(right[j])
            j += 1
            inv += len(left) - i
        else:
            merged.append(left[i])
            i += 1

    merged += left[i:]
    merged += right[j:]

    return merged, inv


with open('/content/drive/MyDrive/221Lab_INPUT OUTPUT/Lab_04/Input_02_01.txt', 'r') as f:
    n = int(f.readline())
    H = list(map(int, f.readline().split()))

_, count = merge_sort(H)

with open('/content/drive/MyDrive/221Lab_INPUT OUTPUT/Lab_04/Output_02_01.txt', 'w') as f:
    f.write(str(count))