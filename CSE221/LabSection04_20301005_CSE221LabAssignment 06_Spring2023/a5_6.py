# -*- coding: utf-8 -*-
"""A5_6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1G-a9VdMAs2FO140RFDOu7gW4prCeF3oP
"""

#A5_task 06
from collections import deque


def get_max_diamonds(grid, r, c):
    max_diamonds = 0

    directions = [(0, 1), (0, -1), (1, 0), (-1, 0)]

    for i in range(r):
        for j in range(c):
            if grid[i][j] != '#':
                diamonds = 0
                queue = deque([(i, j)])
                visited = set([(i, j)])

                while queue:
                    x, y = queue.popleft()

                    if grid[x][y] == 'D':
                        diamonds += 1

                    for dx, dy in directions:
                        nx, ny = x + dx, y + dy
                        if 0 <= nx < r and 0 <= ny < c and grid[nx][ny] != '#' and (
                                nx, ny) not in visited:
                            visited.add((nx, ny))
                            queue.append((nx, ny))

                max_diamonds = max(max_diamonds, diamonds)

    return max_diamonds


with open('/content/drive/MyDrive/221Lab_INPUT OUTPUT/Lab_06/input6_1.txt', 'r') as f:
    r, c = map(int, f.readline().split())
    grid = []
    for i in range(r):
        row = f.readline().strip()
        grid.append(row)

max_diamonds = get_max_diamonds(grid, r, c)

with open('/content/drive/MyDrive/221Lab_INPUT OUTPUT/Lab_06/output6_1.txt', 'w') as f:
    f.write(str(max_diamonds))