# -*- coding: utf-8 -*-
"""task02.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1G-a9VdMAs2FO140RFDOu7gW4prCeF3oP
"""

#Task 2
import heapq


with open('/content/drive/MyDrive/221Lab_INPUT OUTPUT/Lab_06/input2_2.txt', 'r') as fin, open('/content/drive/MyDrive/221Lab_INPUT OUTPUT/Lab_06/output2_2.txt', 'w') as fout:


    n, m = map(int, fin.readline().split())
    adj = [[] for _ in range(n)]
    for i in range(m):
        u, v, w = map(int, fin.readline().split())
        adj[u-1].append((v-1, w))
    s, t = map(int, fin.readline().split())
    s, t = s-1, t-1

    def dijkstra(src):
        dist = [float('inf')] * n
        dist[src] = 0
        visited = set()

        pq = [(0, src)]

        while pq:
            d, u = heapq.heappop(pq)
            if u in visited:
                continue
            visited.add(u)
            for v, w in adj[u]:
                if dist[v] <= d + w:
                    continue
                dist[v] = d + w
                heapq.heappush(pq, (dist[v], v))

        return dist


    dist_s = dijkstra(s)
    dist_t = dijkstra(t)
    min_time = float('inf')
    meet_node = -1

    for i in range(n):
        if dist_s[i] == float('inf') or dist_t[i] == float('inf'):
            continue
        if dist_s[i] + dist_t[i] < min_time:
            min_time = dist_s[i] + dist_t[i]
            meet_node = i

    if meet_node != -1:
        fout.write("Time " + str(min_time) + "\n")
        fout.write("Node " + str(meet_node+1) + "\n")
    else:
        fout.write("Impossible\n")